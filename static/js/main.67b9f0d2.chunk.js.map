{"version":3,"sources":["Appbar.js","App.js","useDebounce.js","useFetchWeather.js","index.js"],"names":["Appbar","inputRef","setCityKeyword","className","onClick","current","focus","SearchBox","ref","placeholder","onChange","App","useRef","useState","isSearching","setIsSearching","city","setCity","debouncedCity","value","debouncedValue","setDebouncedValue","isDirty","setIsDirty","useEffect","debounceHandler","setTimeout","clearTimeout","useDebounce","e","target","Header","toggleIsSearching","WeatherDisplay","isNotFound","weatherData","keyword","setIsNotFound","setWeatherData","getWeatherData","useCallback","a","axios","get","process","data","response","status","useFetchWeather","isEmpty","Object","keys","length","name","WeatherCard","description","iconCode","main","countryCode","sys","country","weather","icon","isHot","temp","src","alt","toFixed","toUpperCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67b9f0d2.chunk.js","sourcesContent":["import React from 'react';\nimport './appbar.scss';\n\nexport default function Appbar({ inputRef, setCityKeyword }) {\n  return (\n    <nav className='nav__outter'>\n      <div className='nav__inner'>\n        <div\n          className='nav__inner-logo'\n          onClick={() => inputRef?.current.focus()}\n        >\n          <h3>Cliché Weather App</h3>\n        </div>\n        <SearchBox inputRef={inputRef} setCityKeyword={setCityKeyword} />\n      </div>\n    </nav>\n  );\n}\n\nfunction SearchBox({ inputRef, setCityKeyword }) {\n  return (\n    <div className='search__box'>\n      <input\n        ref={inputRef}\n        className='search__box__input'\n        placeholder='Search city...'\n        onChange={setCityKeyword}\n      />\n      <i className='fas fa-search'></i>\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport Appbar from './Appbar';\nimport { useDebounce } from './useDebounce';\nimport { useFetchWeather } from './useFetchWeather';\n\nfunction App() {\n  const inputRef = useRef();\n  const [isSearching, setIsSearching] = useState(false);\n  const [city, setCity] = useState('');\n  const debouncedCity = useDebounce(city);\n\n  function toggleIsSearching() {\n    setIsSearching(!isSearching);\n  }\n\n  function setCityKeyword(e) {\n    setCity(e.target.value);\n  }\n\n  useEffect(() => {\n    if (isSearching) inputRef?.current?.focus();\n  }, [isSearching]);\n\n  return (\n    <>\n      <Appbar inputRef={inputRef} setCityKeyword={setCityKeyword} />\n      <Header toggleIsSearching={toggleIsSearching} />\n      <WeatherDisplay debouncedCity={debouncedCity} />\n    </>\n  );\n}\n\nexport default App;\n\nfunction Header({ toggleIsSearching }) {\n  return (\n    <header className='header'>\n      <div className='header__content'>\n        <div className='header__content__text'>\n          <h2>The Cliché Weather App</h2>\n          <h3>Just another useless weather app...</h3>\n        </div>\n        <button className='header__content__button' onClick={toggleIsSearching}>\n          Okay Weatherboy!\n        </button>\n      </div>\n    </header>\n  );\n}\n\nfunction WeatherDisplay({ debouncedCity }) {\n  const [isNotFound, setIsNotFound] = useState(false);\n  const weatherData = useFetchWeather(debouncedCity, setIsNotFound);\n\n  const isEmpty = Object.keys(weatherData).length === 0;\n\n  return (\n    <div className='weather'>\n      <div className='weather__content'>\n        <h3 className='weather__header'>\n          Showing weather in{' '}\n          {weatherData?.name\n            ? weatherData?.name\n            : debouncedCity || (\n                <>\n                  {'{city}'}\n                  <span className='weather__small-text'>\n                    it's not a bug. it's a featue!\n                  </span>\n                </>\n              )}\n        </h3>\n        <div className='weather__content__cards'>\n          {isNotFound ? (\n            <p className='not-found'>{isNotFound}</p>\n          ) : (\n            !isEmpty && <WeatherCard weatherData={weatherData} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction WeatherCard({ weatherData }) {\n  const { name } = weatherData;\n  const { main } = weatherData;\n  const countryCode = weatherData?.sys?.country;\n  let description;\n  let iconCode;\n\n  if (weatherData?.weather) {\n    description = weatherData?.weather[0]?.description;\n    iconCode = weatherData?.weather[0]?.icon;\n  }\n\n  const isHot = main?.temp > 23;\n\n  return (\n    <div className='weather__card'>\n      <div className='weather__card__city'>\n        <h3>{name}</h3>\n        <p className={isHot ? 'sunny-weather' : 'rainy-weather'}>\n          {countryCode}\n        </p>\n      </div>\n      <div className='weather__card__icon'>\n        <img\n          src={`http://openweathermap.org/img/wn/${iconCode}@2x.png`}\n          alt={`${description} icon`}\n        />\n      </div>\n      <div className='weather__card__temp'>\n        <p>{main && main.temp.toFixed(0)} °C</p>\n      </div>\n      <div className='weather__card__desc'>\n        <p>{description && description.toUpperCase()}</p>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport function useDebounce(value) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const [isDirty, setIsDirty] = useState(false);\n\n  useEffect(() => {\n    if (!value && isDirty) return;\n\n    setIsDirty(false);\n\n    const debounceHandler = setTimeout(() => setDebouncedValue(value), 500);\n\n    return () => clearTimeout(debounceHandler);\n  }, [value, isDirty]);\n  return debouncedValue;\n}\n","import axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\n\nexport function useFetchWeather(keyword, setIsNotFound) {\n  const [weatherData, setWeatherData] = useState({});\n\n  const getWeatherData = useCallback(async () => {\n    if (!keyword) return;\n\n    try {\n      setIsNotFound(false);\n\n      const { data } = await axios.get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${\n          keyword ?? 'tel-aviv'\n        }&units=metric&appid=${process.env.REACT_APP_OPEN_WEATHER_API_KEYS}`\n      );\n      setWeatherData(data);\n    } catch (error) {\n      if (error?.response?.status === 404) {\n        setIsNotFound(`City ${keyword} was not found.`);\n        setWeatherData({});\n      }\n    }\n  }, [keyword, setIsNotFound]);\n\n  useEffect(() => {\n    getWeatherData();\n  }, [keyword, getWeatherData]);\n\n  return weatherData;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}